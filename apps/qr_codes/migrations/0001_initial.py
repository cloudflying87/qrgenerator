# Generated by Django 5.0.14 on 2025-10-16 02:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Internal name for this QR code', max_length=255, verbose_name='name')),
                ('qr_type', models.CharField(choices=[('static', 'Static QR Code'), ('dynamic', 'Dynamic QR Code')], default='dynamic', max_length=10, verbose_name='QR type')),
                ('destination_url', models.URLField(help_text='The final destination URL', max_length=2048, verbose_name='destination URL')),
                ('short_code', models.CharField(blank=True, help_text='Unique short code for dynamic QR codes', max_length=20, unique=True, verbose_name='short code')),
                ('size', models.IntegerField(default=300, help_text='Size of QR code in pixels (e.g., 300)', verbose_name='size')),
                ('error_correction', models.CharField(choices=[('L', 'Low (7%)'), ('M', 'Medium (15%)'), ('Q', 'Quartile (25%)'), ('H', 'High (30%)')], default='M', help_text='Error correction level', max_length=1, verbose_name='error correction')),
                ('foreground_color', models.CharField(default='#000000', help_text='QR code color in hex format', max_length=7, verbose_name='foreground color')),
                ('background_color', models.CharField(default='#FFFFFF', help_text='Background color in hex format', max_length=7, verbose_name='background color')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('expired', 'Expired')], default='active', max_length=10, verbose_name='status')),
                ('max_scans', models.IntegerField(blank=True, help_text='Maximum number of scans (null = unlimited)', null=True, verbose_name='max scans')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Expiration date/time (null = never expires)', null=True, verbose_name='expires at')),
                ('password', models.CharField(blank=True, help_text='Optional password to access the QR code', max_length=128, verbose_name='password')),
                ('description', models.TextField(blank=True, help_text='Optional description or notes', verbose_name='description')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for organization', max_length=255, verbose_name='tags')),
                ('total_scans', models.IntegerField(default=0, verbose_name='total scans')),
                ('unique_scans', models.IntegerField(default=0, verbose_name='unique scans')),
                ('last_scanned_at', models.DateTimeField(blank=True, null=True, verbose_name='last scanned at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qr_codes', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'QR code',
                'verbose_name_plural': 'QR codes',
                'db_table': 'qr_codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QRScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('referer', models.URLField(blank=True, max_length=2048, verbose_name='referer')),
                ('device_type', models.CharField(blank=True, help_text='mobile, tablet, desktop', max_length=20, verbose_name='device type')),
                ('browser', models.CharField(blank=True, max_length=50, verbose_name='browser')),
                ('operating_system', models.CharField(blank=True, max_length=50, verbose_name='operating system')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('was_successful', models.BooleanField(default=True, verbose_name='was successful')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('visitor_id', models.CharField(blank=True, help_text='Unique visitor identifier', max_length=64, verbose_name='visitor ID')),
                ('is_unique_visitor', models.BooleanField(default=False, verbose_name='is unique visitor')),
                ('scanned_at', models.DateTimeField(auto_now_add=True, verbose_name='scanned at')),
                ('qr_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='qr_codes.qrcode', verbose_name='QR code')),
            ],
            options={
                'verbose_name': 'QR scan',
                'verbose_name_plural': 'QR scans',
                'db_table': 'qr_scans',
                'ordering': ['-scanned_at'],
            },
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['user', '-created_at'], name='qr_codes_user_id_52db52_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['short_code'], name='qr_codes_short_c_ff0ab2_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['status'], name='qr_codes_status_9bd52c_idx'),
        ),
        migrations.AddIndex(
            model_name='qrscan',
            index=models.Index(fields=['qr_code', '-scanned_at'], name='qr_scans_qr_code_6b4f18_idx'),
        ),
        migrations.AddIndex(
            model_name='qrscan',
            index=models.Index(fields=['visitor_id'], name='qr_scans_visitor_61782d_idx'),
        ),
        migrations.AddIndex(
            model_name='qrscan',
            index=models.Index(fields=['ip_address'], name='qr_scans_ip_addr_72ed15_idx'),
        ),
    ]
