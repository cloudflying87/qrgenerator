[tool.ruff]
# Ruff configuration - replaces black, isort, flake8
target-version = "py311"
line-length = 100
exclude = [
    ".git",
    "__pycache__",
    "migrations",
    ".venv",
    "venv",
    "staticfiles",
    "media",
    "templates",  # Django templates - use djhtml instead
    "*.html",     # All HTML files
    "*.jinja",    # Jinja templates
    "*.jinja2",   # Jinja2 templates
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG",    # flake8-unused-arguments
    "SIM",    # flake8-simplify
    "DJ",     # flake8-django
    "S",      # flake8-bandit (security)
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "S101",   # use of assert (ok in tests)
    "DJ001",  # avoid null=True on string fields (sometimes needed)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "ARG001", "ARG002"]
"**/migrations/*.py" = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["apps", "config"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.development"

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101"]  # Skip assert warnings in tests

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.development"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=apps",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--no-cov-on-fail",
]
testpaths = ["tests"]

[tool.coverage.run]
source = ["apps"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"
